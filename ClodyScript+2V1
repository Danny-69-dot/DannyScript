local P = game:GetService("Players")
local p = P.LocalPlayer
local x = "/"
local immune = {}
local ban = {}
local lockdown = false

local function getTool()
    local tool = "F3X" or "Building Tools"
    return p.Character:FindFirstChild(tool) or p.Backpack:FindFirstChild(tool)
end

local function delete(inst, tool)
    if tool then
        tool:FindFirstChildOfClass("BindableFunction"):FindFirstChildOfClass("RemoteFunction"):InvokeServer("UndoRemove", {inst})
    end
end

local function find(playerName)
    for _, v in pairs(P:GetPlayers()) do
        if playerName:lower() == v.Name:lower():sub(1, #playerName) or playerName:lower() == v.DisplayName:lower():sub(1, #playerName) then
            return v
        end
    end
end

local function notification(title, text, duration)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = title,
        Text = text,
        Duration = duration
    })
end

local function kill(player)
    local tool = getTool()
    local function killing()
        if player and player.Character then
            delete(player.Character:FindFirstChild("Torso") and player.Character.Torso:FindFirstChild("Neck"), tool)
        end
    end
    if tool and tool.Parent == p.Backpack then
        tool.Parent = p.Character
        wait()
        killing()
        wait()
        tool.Parent = p.Backpack
    elseif tool and tool.Parent == p.Character then
        killing()
    end
end

local function kick(player)
    local tool = getTool()
    local function kicking()
        if player then
            delete(player, tool)
        end
    end
    if tool and tool.Parent == p.Backpack then
        tool.Parent = p.Character
        wait()
        kicking()
        wait()
        tool.Parent = p.Backpack
    elseif tool and tool.Parent == p.Character then
        kicking()
    end
end

local function punish(player)
    local tool = getTool()
    local function punishing()
        if player and player.Character then
            delete(player.Character, tool)
        end
    end
    if tool and tool.Parent == p.Backpack then
        tool.Parent = p.Character
        wait()
        punishing()
        wait()
        tool.Parent = p.Backpack
    elseif tool and tool.Parent == p.Character then
        punishing()
    end
end

local function freeze(player)
    local tool = getTool()
    local function freezing()
        if player and player.Character.HumanoidRootPart and player.Character.Animate then
            delete(player.Character.HumanoidRootPart, tool)
            delete(player.Character.Animate)
        end
    end
    if tool and tool.Parent == p.Backpack then
        tool.Parent = p.Character
        wait()
        freezing()
        wait()
        tool.Parent = p.Backpack
    elseif tool and tool.Parent == p.Character then
        freezing()
    end
end

local function destroy(number)
  local F3XGiver
			local F3X = workspace:FindFirstChild("SafePlate")
			for i,v in pairs(F3X.Mesh.Value:GetDescendants()) do
				if v.Name == "Bricks" and v:FindFirstChild("Bar") then
					F3XGiver = v.Parent
				end
			end
	local BtoolsGiver
	    local Btools = workspace:FindFirstChild("SafePlate")
			for i,v in pairs(Btools.Mesh.Value:GetDescendants()) do
				if v.Name == "Bricks" and not v:FindFirstChild("Bar") then
					BtoolsGiver = v.Parent
				end
		  end
    local unbreakable = {
        ["1"] = {F3XGiver},
        ["2"] = {BtoolsGiver},
        ["3"] = {game.Workspace:FindFirstChild("kill bricks")},
        ["4"] = {
            game.Workspace:FindFirstChild("made by FoxBin"),
            game.Workspace:FindFirstChild("made by FoxBin1"),
            game.Workspace:FindFirstChild("made byFoxBin MK2"),
            game.Workspace:FindFirstChild("made by FoxBinMK4"),
            game.Workspace:FindFirstChild("made by FoxBinMK6")
        },
        ["5"] = {game.Workspace:FindFirstChild("FoxBinMK5")},
        ["6"] = {game.Workspace:FindFirstChild("GearBoardManagerModel")},
        ["7"] = {
            game.Workspace:FindFirstChild("Sp bricks"),
            game.Workspace:FindFirstChild("Bricks")
        },
        ["8"] = {game.Workspace:FindFirstChild("Baseplate")},
        ["9"] = {
            game.Workspace:FindFirstChild("AdGui"),
            game.Workspace:FindFirstChild("FoxBin'sDjBoard")
        },
        ["10"] = {game.Workspace:FindFirstChild("LPI Museum V.2 By Cobleth")},
        ["11"] = {game.StarterGui:FindFirstChild("Respawn Gui")}
    }
    local del = unbreakable[tostring(number)]
    local tool = getTool()
    local function destroying()
        if del then
            for _, item in pairs(del) do
              if item then
                delete(item, tool)
              end
            end
        end
    end
    
    if tool and tool.Parent == p.Backpack then
        tool.Parent = p.Character
        wait()
        destroying()
        wait()
        tool.Parent = p.Backpack
    elseif tool and tool.Parent == p.Character then
        destroying()
    end
end

local function serverLock()
    if lockdown == true then
      wait()
        notification("ClodyScript: ", "Lockdown state is on", 5)
        game.Players.PlayerAdded:Connect(function(player)
            kick(player)
        end)
    end
end

local function isFriend(target)
    for _, friend in ipairs(P:GetFriendsAsync(p.UserId):GetCurrentPage()) do
        if friend.Username == target.Name then
            return true
        end
    end
    return false
end

local function randomList()
    local players = P:GetPlayers()
    local randomPlayer
    repeat
        randomPlayer = players[math.random(1, #players)]
    until randomPlayer.Name ~= p.Name
    return randomPlayer
end

p.Chatted:Connect(function(chat)
    local space = chat:split(" ")
    local cmd = space[1]
    local target = space[2]

    if cmd == x .. "immune" then
        if target == "other" then
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name and not table.find(immune, player) then
                    table.insert(immune, player)
                    notification("ClodyScript: ", "Successfully immune other", 5)
                end
            end
        elseif target == "friend" then
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name and isFriend(player) and not table.find(immune, player) then
                    table.insert(immune, player)
                end
            end
            notification("ClodyScript: ", "Successfully immune all friends", 5)
        else
            local player = find(target)
            if player and player.Name ~= p.Name and not table.find(immune, player) then
                table.insert(immune, player)
                notification("ClodyScript: ", "Successfully immune '" .. player.Name .. "'", 5)
            end
        end

    elseif cmd == x .. "kill" then
        if target == "other" then
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name then
                    kill(player)
                end
            end
        elseif target == "nonfriend" then
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name and not isFriend(player) then
                    kill(player)
                end
            end
        elseif target == "random" then
            local player = randomList()
            if player then
                kill(player)
            end
        elseif target == "nonimmune" then
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name and not table.find(immune, player) then
                    kill(player)
                end
            end
        else
            local player = find(target)
            if player then
                kill(player)
            end
        end

    elseif cmd == x .. "kick" then
        if target == "other" then
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name then
                    kick(player)
                end
            end
        elseif target == "nonfriend" then
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name and not isFriend(player) then
                    kick(player)
                end
            end
        elseif target == "random" then
            local player = randomList()
            if player then
                kick(player)
            end
        elseif target == "nonimmune" then
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name and not table.find(immune, player) then
                    kick(player)
                end
            end
        else
            local player = find(target)
            if player then
                kick(player)
            end
        end
        
    elseif cmd == x .. "ban" then
        if target == "other" then
            for _, player in pairs(P:GetPlayers()) do
                if player.UserId ~= p.UserId and not table.find(ban, player.UserId) then
                    table.insert(ban, player.UserId)
                    kick(player)
                end
            end
        elseif target == "nonfriend" then
            for _, player in pairs(P:GetPlayers()) do
                if player.UserId ~= p.UserId and not isFriend(player) and not table.find(ban, player.UserId) then
                    table.insert(ban, player.UserId)
                    kick(player)
                end
            end
        elseif target == "random" then
            local player = randomList()
            if player and not table.find(ban, player.UserId) then
                table.insert(ban, player.UserId)
                kick(player)
            end
        elseif target == "nonimmune" then
            for _, player in pairs(P:GetPlayers()) do
                if player.UserId ~= p.UserId and not table.find(immune, player) and not table.find(ban, player.UserId) then
                    table.insert(ban, player.UserId)
                    kick(player)
                end
            end
        else
            local player = find(target)
            if player and not table.find(ban, player.UserId) then
                table.insert(ban, player.UserId)
                kick(player)
            end
        end

    elseif cmd == x .. "lockdown" then
        if target == "on" then
            lockdown = true
            serverLock()
        elseif target == "off" then
            lockdown = false
            if lockdown == false then
              wait()
                notification("ClodyScript: ", "Lockdown state is off", 5)
            end
        end

    elseif cmd == x .. "remove" then
        if target == "f3x" then
            destroy(1)
        elseif target == "btools" then
            destroy(2)
        elseif target == "lava" then
            destroy(3)
        elseif target == "gearboard" then
            destroy(4)
        elseif target == "code" then
            destroy(5)
        elseif target == "loadout" then
            destroy(6)
        elseif target == "brick" then
            destroy(7)
        elseif target == "baseplate" then
            destroy(8)
        elseif target == "music" then
            destroy(9)
        elseif target == "museum" then
            destroy(10)
        elseif target == "respawngui" then
            destroy(11)
            for _, player in pairs(P:GetPlayers()) do
                if player.Name ~= p.Name then
                    kill(player)
                end
            end
        end
    end
end)

spawn(
    function()
        while true do
            for _, player in ipairs(P:GetPlayers()) do
                if table.find(ban, player.UserId) then
                    kick(player)
                end
            end
            wait(0.1)
        end
    end
)

P.PlayerAdded:Connect(function(player)
    if table.find(ban, player.UserId) then
        kick(player)
    end
end)
